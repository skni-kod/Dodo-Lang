// base primitive types, they contain default method definitions
// primitive types contain only one variable and cannot declare members
primitive SIGNED_INTEGER   <1> type i8 {
    // optional default overrides and methods
}

primitive SIGNED_INTEGER   <2> type i16;
primitive SIGNED_INTEGER   <4> type i32;
primitive SIGNED_INTEGER   <8> type i64;

primitive UNSIGNED_INTEGER <1> type u8 ;
primitive UNSIGNED_INTEGER <2> type u16;
primitive UNSIGNED_INTEGER <4> type u32;
primitive UNSIGNED_INTEGER <8> type u64;

primitive FLOATING_POINT   <2> type f16;
primitive FLOATING_POINT   <4> type f32;
primitive FLOATING_POINT   <8> type f64;

// complex types cannot declare primitive members directly, at least not for now
type Vec2i8 {
    i8 x;
    i8 y;
    // optional default overrides and methods
}

type Vec2i64 {
    i64 x;
    i64 y;
}

type Vec2Vec2i8i64 {
    Vec2i8 x;
    Vec2i64 y;
}

i32 Main() {
    syscall(1, 0, "Hello world! The return value of this mess is: ", 47);
    return 123;
}