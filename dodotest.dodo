// basic signed integers
type i8 : SIGNED_INTEGER(1);
type i16 : SIGNED_INTEGER(2);
type i32 : SIGNED_INTEGER(4);
type i64 : SIGNED_INTEGER(8);

// basic signed integers
type u8 : UNSIGNED_INTEGER(1);
type u16 : UNSIGNED_INTEGER(2);
type u32 : UNSIGNED_INTEGER(4);
type u64 : UNSIGNED_INTEGER(8);

i8 t() {
    let u8 y = 42;
    return y;
}

i32 main() {
    let i8 wow = 6;
    let i16 h = t() - 100;
    mut u32 test = wow;
    test *= wow + 8 / 5;
    return test;
}