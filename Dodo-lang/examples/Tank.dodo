// This example shows a simple tank simulation with 2 inputs and one output
// Updated to work with version 4.0.0 on 04.10.2025

// additional standard library modules import
import "Print.dodo";
import "Time.dodo";

void PrintTank(let mut i32 level, let mut u8 state) {

    Println("-><|        |><-");
    Println("   |        |   ");
    if (level > 50) {
        if (state == 0) {
            Println("|           :  |");
        }
        else {
            Println("|              |");
        }
        Println("|~~~~~~~~~~~~~~|");
        Println("|              |");
        Println("|              |");
        Println("|              |");
        Println("|              |");
        Println("|______________|");

    }
    else if (level > 40) {
        if (state == 0) {
            Println("|  :           |");
            Println("|  :           |");
        }
        else {
            Println("|              |");
            Println("|              |");
        }
        Println("|~~~~~~~~~~~~~~|");
        Println("|              |");
        Println("|              |");
        Println("|              |");
        Println("|______________|");
    }
    else if (level > 30) {
        if (state == 0) {
            Println("|           :  |");
            Println("|           :  |");
            Println("|           :  |");
        }
        else {
            Println("|              |");
            Println("|              |");
            Println("|              |");
        }
        Println("|~~~~~~~~~~~~~~|");
        Println("|              |");
        Println("|              |");
        Println("|______________|");
    }
    else if (level > 20) {
        if (state == 0) {
            Println("|  :           |");
            Println("|  :           |");
            Println("|  :           |");
            Println("|  :           |");
        }
        else {
            Println("|              |");
            Println("|              |");
            Println("|              |");
            Println("|              |");
        }
        Println("|~~~~~~~~~~~~~~|");
        Println("|              |");
        Println("|______________|");
    }
    else if (level > 10) {
        if (state == 0) {
            Println("|           :  |");
            Println("|           :  |");
            Println("|           :  |");
            Println("|           :  |");
            Println("|           :  |");
        }
        else {
            Println("|              |");
            Println("|              |");
            Println("|              |");
            Println("|              |");
            Println("|              |");
        }
        Println("|~~~~~~~~~~~~~~|");
        Println("|______________|");
    }
    else {
        if (state == 0) {
            Println("|  :           |");
            Println("|  :           |");
            Println("|  :           |");
            Println("|  :           |");
            Println("|  :           |");
            Println("|  :           |");
        }
        else {
            Println("|              |");
            Println("|              |");
            Println("|              |");
            Println("|              |");
            Println("|              |");
            Println("|              |");
        }
        Println("|==============|");
    }
    Println("         |   ");
    Println("         |><|");
    Println("            |");
    if (state == 0) {
        Println("             ");
    }
    else {
        Println("            : ");
    }

    return;
}

void Wait(let u64 anything) {
    let mut u64 seconds = 0;
    let mut u64 nanoseconds = 150_000_000;
    Sleep(seconds, nanoseconds);
    return;
}

i32 Main() {

    let mut i32 level = 25;
    let mut u8 state = 0;

    while (true) {
        // calculations here
        if (state == 0) {
            level = level + 1;
            if (level > 55) {
                state = 1;
            }
        }
        else {
            level  = level - 1;
            if (level < 5) {
                state = 0;
            }
        }

        // printing the thing
        PrintTank(level, state);

        Wait(0);
    }

    return 0;
}